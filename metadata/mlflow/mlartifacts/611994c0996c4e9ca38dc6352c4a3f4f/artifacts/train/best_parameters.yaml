# hardcoded parameters 
max_depth: '10'
min_samples_split: '2'
model_name: RandomForest
n_estimators: '100'
random_state: '42'

# default parameters 
cv: '5'
decision_tree: DecisionTreeClassifier()
decision_tree__ccp_alpha: '0.0'
decision_tree__class_weight: None
decision_tree__criterion: gini
decision_tree__max_depth: None
decision_tree__max_features: None
decision_tree__max_leaf_nodes: None
decision_tree__min_impurity_decrease: '0.0'
decision_tree__min_samples_leaf: '1'
decision_tree__min_samples_split: '2'
decision_tree__min_weight_fraction_leaf: '0.0'
decision_tree__monotonic_cst: None
decision_tree__random_state: None
decision_tree__splitter: best
estimators: '[(''logistic'', LogisticRegression(max_iter=200)), (''svc'', SVC(probability=True)),
  (''decision_tree'', DecisionTreeClassifier()), (''random_forest'', RandomForestClassifier())]'
final_estimator: "XGBClassifier(base_score=None, booster=None, callbacks=None,\n \
  \             colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=None,\
  \ device=None, early_stopping_rounds=None,\n              enable_categorical=False,\
  \ eval_metric='mlogloss',\n              feature_types=None, gamma=None, grow_policy=None,\n\
  \              importance_type=None, interaction_constraints=None,\n           \
  \   learning_rate=None, max_bin=None, max_cat_threshold=None,\n              max_cat_to_onehot=None,\
  \ max_delta_step=None, max_depth=None,\n              max_leaves=None, min_child_weight=None,\
  \ missing=nan,\n              monotone_constraints=None, multi_strategy=None, n_estimators=None,\n\
  \              n_jobs=None, num_parallel_tree=None, random_state=None, ...)"
final_estimator__base_score: None
final_estimator__booster: None
final_estimator__callbacks: None
final_estimator__colsample_bylevel: None
final_estimator__colsample_bynode: None
final_estimator__colsample_bytree: None
final_estimator__device: None
final_estimator__early_stopping_rounds: None
final_estimator__enable_categorical: 'False'
final_estimator__eval_metric: mlogloss
final_estimator__feature_types: None
final_estimator__gamma: None
final_estimator__grow_policy: None
final_estimator__importance_type: None
final_estimator__interaction_constraints: None
final_estimator__learning_rate: None
final_estimator__max_bin: None
final_estimator__max_cat_threshold: None
final_estimator__max_cat_to_onehot: None
final_estimator__max_delta_step: None
final_estimator__max_depth: None
final_estimator__max_leaves: None
final_estimator__min_child_weight: None
final_estimator__missing: nan
final_estimator__monotone_constraints: None
final_estimator__multi_strategy: None
final_estimator__n_estimators: None
final_estimator__n_jobs: None
final_estimator__num_parallel_tree: None
final_estimator__objective: binary:logistic
final_estimator__random_state: None
final_estimator__reg_alpha: None
final_estimator__reg_lambda: None
final_estimator__sampling_method: None
final_estimator__scale_pos_weight: None
final_estimator__subsample: None
final_estimator__tree_method: None
final_estimator__use_label_encoder: 'False'
final_estimator__validate_parameters: None
final_estimator__verbosity: None
logistic: LogisticRegression(max_iter=200)
logistic__C: '1.0'
logistic__class_weight: None
logistic__dual: 'False'
logistic__fit_intercept: 'True'
logistic__intercept_scaling: '1'
logistic__l1_ratio: None
logistic__max_iter: '200'
logistic__multi_class: deprecated
logistic__n_jobs: None
logistic__penalty: l2
logistic__random_state: None
logistic__solver: lbfgs
logistic__tol: '0.0001'
logistic__verbose: '0'
logistic__warm_start: 'False'
n_jobs: None
passthrough: 'False'
random_forest: RandomForestClassifier()
random_forest__bootstrap: 'True'
random_forest__ccp_alpha: '0.0'
random_forest__class_weight: None
random_forest__criterion: gini
random_forest__max_depth: None
random_forest__max_features: sqrt
random_forest__max_leaf_nodes: None
random_forest__max_samples: None
random_forest__min_impurity_decrease: '0.0'
random_forest__min_samples_leaf: '1'
random_forest__min_samples_split: '2'
random_forest__min_weight_fraction_leaf: '0.0'
random_forest__monotonic_cst: None
random_forest__n_estimators: '100'
random_forest__n_jobs: None
random_forest__oob_score: 'False'
random_forest__random_state: None
random_forest__verbose: '0'
random_forest__warm_start: 'False'
stack_method: auto
svc: SVC(probability=True)
svc__C: '1.0'
svc__break_ties: 'False'
svc__cache_size: '200'
svc__class_weight: None
svc__coef0: '0.0'
svc__decision_function_shape: ovr
svc__degree: '3'
svc__gamma: scale
svc__kernel: rbf
svc__max_iter: '-1'
svc__probability: 'True'
svc__random_state: None
svc__shrinking: 'True'
svc__tol: '0.001'
svc__verbose: 'False'
verbose: '0'

